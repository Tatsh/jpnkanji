<?php

require 'kanjisqlfun.php';

function mysql_insert($sql, $needresult=1)
{
  //print "$sql\n";return 0;
  $tmp = mysql_query($sql);
  if(!$tmp)
  {
    echo "ERROR in '$sql'\n",
         mysql_errno(), ' ', mysql_error(), "\n";
    exit;
  }
  if(!$needresult)return;
  $tmp = mysql_query('select last_insert_id()');
  $tmp2 = mysql_fetch_row($tmp);
  return $tmp2[0];
}

class BackgroundSQL
{
  private $sqlbuf;
  private $pipes;
  private $proc;

  public function mysql_get_commandline()
  {
    $s=shellfix('@MYSQL@');
    $s .= ' '.shellfix('-u@SQLUSER@');
    if(strlen('@SQLHOST@') > 0)$s .= ' '.shellfix('-h@SQLHOST@');
    if(strlen('@SQLPASS@') > 0)$s .= ' '.shellfix('-p@SQLPASS@');
    $s .= ' '.shellfix('@SQLBASE@');
    return $s;
  }
  
  public function Write($SQL)
  {
    $this->Open();
    
    if(strlen($this->sqlbuf) > 32768)
    {
      stream_set_blocking($this->pipes[0], 1);
      $num = fwrite($this->pipes[0], $this->sqlbuf);
      $this->sqlbuf = substr($this->sqlbuf, $num);
      fflush($this->pipes[0]);
      stream_set_blocking($this->pipes[0], 0);
    }
    
    $app = "$SQL;\n";
    $sql = "{$this->sqlbuf}$app";
    
    $num = (int)fwrite($this->pipes[0], $sql);
    if($num == 0)
      $this->sqlbuf .= $app;
    else
      $this->sqlbuf = substr($sql, $num);
  }
  
  public function Flush()
  {
    $this->Open();

    stream_set_blocking($this->pipes[0], 1);
    fwrite($this->pipes[0], $this->sqlbuf);
    fflush($this->pipes[0]);
  }
  
  private function Open()
  {
    if(!$this->proc)
    {
      $this->proc = proc_open(
        $this->mysql_get_commandline(),
        Array(0 => Array('pipe', 'r'),
              1 => Array('file', '/dev/null', 'w'),
              2 => Array('file', '/tmp/mysql-konverto.log', 'a')),
        $this->pipes);
      stream_set_write_buffer($this->pipes[0], 8192);
      stream_set_blocking($this->pipes[0], 0);
      
      $this->sqlbuf = '';
    }
  }
};

$bgsql = new BackgroundSQL;

function mysql_insert_background($sql)
{
  global $bgsql;
  $bgsql->Write($sql);
}
function mysql_background_end()
{
  global $bgsql;
  $bgsql->Flush();
}
