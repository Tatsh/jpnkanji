<?php

error_reporting  (E_ERROR | E_WARNING | E_PARSE);

include 'konvertfun.php';

$dicts = array
(
  # DICT LIST BEGIN
  '4jwords'   => 'Common 4-kanji words',
  'aviation'  => 'Flight terms (aviation)',
  'classical' => 'Classical Japanese',
  'compdic'   => 'Computing and Communications',
  'concrete'  => 'Concretes',
  'engscidic' => 'Engineering and science',
  'findic'    => 'Financial terms',
  'geodic'    => 'Geological terms',
  'j_places'  => 'Japanese place names',
  'lawgledt'  => 'Law terms',
  'lingdic'   => 'Linguistic terms',
  'mktdic'    => 'Business and marketing',
  'pandpdic'  => 'Pulp & Paper Industry',
  'stardict'  => 'Star constellations',
  'edict'     => 'Main EDICT',
  'enamdict'  => 'Proper names'
  # DICT LIST END

 #'ediclsd3'  => 'Life Sciences',
 # Distributing this requires a written permission
 # from the LSD3 project coordinator, Dr Shuji Kaneko.
 
 #'compverb'  => 'Compound verbs'
 # All of them are already in EDICT 
);
require_once 'attrlist.php';
$terms = $GLOBALS['attrlist'];

function Table($s)
{
  switch($s)
  {
    case 'japdata':
    case 'japtrans':
    case 'japattr':
    case 'japdict':
      return $s;
    default:
      return $s;
  }
}

$insert_records = Array();
$insert_n       = 0;
function BackgroundInsert($table, $fields, $values)
{
  global $insert_records, $insert_n;
  $insert_records[$table][$fields][] = $values;
  if(++$insert_n >= 5000) BackgroundInsertFlush();
}
function BackgroundInsertFlush()
{
  global $insert_records, $insert_n;
  $insert_n = 0;
  foreach($insert_records as $table => $types)
    foreach($types as $type => $records)
    {
      $SQL = 'insert into '.Table($table)." ($type)values".join(',', $records);
      #print "\n$SQL\n";
      mysql_insert_background($SQL);
    }
  $insert_records = Array();
}

function AddEntry($dict_id, $kanji, $kana, $transql, $attrsql)
{
  static $pipes, $proc;
  global $cset;
  global $dataid;

  if(!$pipes)
  {
    $pipes = Array();
    $proc = proc_open('kakasi -u -Ha -Ka -Ja -Ea -s',
      Array(0 => Array('pipe', 'r'),
            1 => Array('pipe', 'w'),
            2 => Array('file', '/tmp/edict-konverto.log', 'a')
           ), $pipes);

    stream_set_write_buffer($pipes[0], 0);
  }
  
  fwrite($pipes[0], "$kanji\n");
  fwrite($pipes[0], "$kana\n");
  fflush($pipes[0]);
  
  $kanjir= fgets($pipes[1], 256);
  $kanar = fgets($pipes[1], 256);
  
  $kanji = recode_string("{$cset}..utf8", $kanji);
  $kana  = recode_string("{$cset}..utf8", $kana);
  
  ++$dataid;
  
  BackgroundInsert('japdata', 'id,dict_id,kanjir,kanar,kanji,kana',
    "($dataid,$dict_id,".sqlfix($kanjir).','
                        .sqlfix($kanar).','
                        .sqlfix($kanji).','
                        .sqlfix($kana).')');
  
  if(!empty($transql))
  {
    foreach($transql as $trans)
      BackgroundInsert('japtrans', 'trans_id,name',
        "($dataid,".sqlfix(recode_string("{$cset}..utf8", $trans)).")");
  }

  if(!empty($attrsql))
  {
    foreach($attrsql as $attr)
      BackgroundInsert('japattr', 'trans_id,name', "($dataid,".sqlfix($attr).")");
  }
}

$tmp = mysql_query('select max(id)from '.Table('japdata'));
$tmp2 = mysql_fetch_row($tmp);
if(!$tmp2)$dataid=0;else $dataid = $tmp2[0];

ob_implicit_flush(TRUE);
foreach($dicts as $filename => $desc)
{
  $dict_id = mysql_insert(
    'insert into '.Table('japdict').
    ' set name='.sqlfix($filename).',description='.sqlfix($desc));
  
  $cset = 'eucjp';
  
  $f = fopen($filename, 'r');
  
  print $filename;
  
  for(;;)
  {
    $s = fgets($f, 512);
    if($s === FALSE)break;
    
    $s = str_replace("\n", '', $s);
    
    $tab = explode('/', $s);
    
    $kanji = $tab[0];
    $sels = count($tab);
    
    $kana = ereg_replace('.*\[(.*)\].*', '\1', $kanji);
    if($kana == $kanji)
      $kanji = '';
    else
      $kanji = trim(ereg_replace('\[.*\]', '', $kanji));
    $kana = trim($kana);
    
    $transql = array();
    $attrsql = array();
    for($c=1; $c<$sels; $c++)
    {
      $trans = $tab[$c];
      if($trans == '(P)') continue; /* (delete the 20000 most common marker) */
      
      preg_match_all('/\(([^)]*)\)/', $trans, $attrs);
      
      foreach($attrs[1] as $d=>$desc)
        if(ereg('[a-z0-9A-Z],[a-zA-Z]', $desc))
        {
          $trans = str_replace($attrs[0][$d], ' ', $trans);
          $k = explode(',', $desc);
          unset($attrs[0][$d]);
          unset($attrs[1][$d]);
          foreach($k as $kk)
            $attrs[0][] = '('.($attrs[1][] = $kk).')';
        }
      
      foreach($attrs[1] as $d=>$desc)
        if(!$terms[$desc])
        {
          unset($attrs[0][$d]);
          unset($attrs[1][$d]);
        }
      
      $trans = trim(str_replace($attrs[0], '', $trans));
      if(strlen($trans))
        $transql[] = $trans;
      foreach($attrs[1] as $tmp)
        $attrsql[] = $tmp;
    }
    if(count($transql))
      AddEntry($dict_id, $kanji, $kana, array_unique($transql), array_unique($attrsql));

    print '.';
  }
  fclose($f);
  print "\n";
}

BackgroundInsertFlush();
mysql_background_end();
